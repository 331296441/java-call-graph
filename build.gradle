apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group 'com.github.adrninistrator'
version = "0.2.2"
def projectName = "java-callgraph2"
description = "${projectName}"
sourceCompatibility = 1.8
targetCompatibility = 1.8

def defaultEncoding = 'UTF-8'

[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

project.buildDir = 'build'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }

        resources {
            srcDir 'src/main/resources'
        }
    }

    test {
        java {
            srcDir 'src/test/java'
        }

        resources {
            srcDir 'src/test/resources'
        }
    }
}

List bcel = ['org.apache.bcel:bcel:6.5.0']

dependencies {
    compile bcel
}

compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

processResources {
    setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
}

task createProject {
    doFirst {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs() }
    }
}

// 生成可以直接执行的jar包，并拷贝相关文件
task gen_run_jar(type: Jar) {
    archiveName 'run_javacg2.jar'
    from(sourceSets.main.output) {
        into '/'
    }

    doLast{
        copy {
            from 'build/libs/run_javacg2.jar'
            into 'output_dir/jar/'
        }
        copy {
            from 'run.bat'
            into 'output_dir/'
        }
        copy {
            from 'run.sh'
            into 'output_dir/'
        }
        copy {
            from configurations.runtimeClasspath
            into 'output_dir/lib'
        }
    }
}

task sourcesJar(type: Jar) {
    doFirst {
        archiveClassifier.set('sources')
        from sourceSets.main.allJava
    }
}

task javadocJar(type: Jar) {
    doFirst {
        archiveClassifier.set('javadoc')
        from javadoc.destinationDir
    }
}
